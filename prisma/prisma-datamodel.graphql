type Program {
  id: ID! @id
  name: String! @unique
  Cctoken: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  products: [Product!]!
}
type Product {
  id: ID! @id
  name: String!
  program: Program!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  projects: [Project!]!
  ProductActive: Boolean @default(value: false)
  Ccrepos: [Ccrepo]! @relation(name:"CCRepos")
}
type Project {
  id: ID! @id
  name: String!
  product: Product!
  status: Boolean @default(value: false)
  projectManagers: [Person!]! @relation(name: "ProjectManager")
  team: [Person!]! @relation(name: "Team")
  notes: [Note!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  projectColumns: [Column!]! @relation(name: "ProjectColumn")
  projectActive: Boolean @default(value: false)
}
type Ccrepo {
  id: ID! @id
  name: String!
  CCId: String! @unique
  product: Product! @relation(name:"CCRepos")
}
type Note {
  id: ID! @id
  topic: String!
  content: String!
  author: Person! @relation(name: "NoteAuthor")
  attendedBy: [Person!]! @relation(name: "NoteAttendee")
  project: Project!
  rating: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
type Person {
  id: ID! @id
  name: String!
  email: String! @unique
  authored: [Note!]! @relation(name: "NoteAuthor")
  attended: [Note!]! @relation(name: "NoteAttendee")
  manages: [Project!]! @relation(name: "ProjectManager")
  team: Project @relation(name: "Team")
  avatar: String
}
type Label {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  color: String!
  column: Column!
}
type Column {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updateAt: DateTime! @updatedAt
  name: String! @unique
  addedTo: Project! @relation(name: "ProjectColumn")
  labels: [Label!]!
}